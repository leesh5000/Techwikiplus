openapi: 3.0.1
info:
  title: TechWikiPlus User Service API
  description: User Service API Documentation
  version: LOCAL_VERSION
servers:
  - url: http://localhost:9000
    description: Local server
  - url: http://13.124.188.47:9000
    description: Production server
tags: []
paths:
  /api/v1/users/login:
    post:
      tags:
      - User Management
      summary: 사용자 로그인
      description: |-
        사용자 계정으로 로그인합니다.

        로그인이 성공하면 액세스 토큰과 리프레시 토큰이 발급되며,
        이후 인증이 필요한 API 호출 시 액세스 토큰을 사용해야 합니다.

        액세스 토큰이 만료된 경우 리프레시 토큰을 사용하여 새로운 액세스 토큰을 발급받을 수 있습니다.
      operationId: 사용자 로그인 성공삭제된 사용자 로그인인증 대기중 사용자 로그인잘못된 비밀번호로 로그인존재하지 않는 사용자 로그인차단된
        사용자 로그인휴면 사용자 로그인
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginController.Request"
            examples:
              사용자 로그인 성공:
                value: "{\r\n  \"email\" : \"logintest@example.com\",\r\n  \"password\"\
                  \ : \"Password123!\"\r\n}"
              삭제된 사용자 로그인:
                value: "{\r\n  \"email\" : \"deleted@example.com\",\r\n  \"password\"\
                  \ : \"Password123!\"\r\n}"
              인증 대기중 사용자 로그인:
                value: "{\r\n  \"email\" : \"pending@example.com\",\r\n  \"password\"\
                  \ : \"Password123!\"\r\n}"
              잘못된 비밀번호로 로그인:
                value: "{\r\n  \"email\" : \"wrongpass@example.com\",\r\n  \"password\"\
                  \ : \"WrongPassword!\"\r\n}"
              존재하지 않는 사용자 로그인:
                value: "{\r\n  \"email\" : \"nonexistent@example.com\",\r\n  \"password\"\
                  \ : \"Password123!\"\r\n}"
              차단된 사용자 로그인:
                value: "{\r\n  \"email\" : \"banned@example.com\",\r\n  \"password\"\
                  \ : \"Password123!\"\r\n}"
              휴면 사용자 로그인:
                value: "{\r\n  \"email\" : \"dormant@example.com\",\r\n  \"password\"\
                  \ : \"Password123!\"\r\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginController.Response"
              examples:
                사용자 로그인 성공:
                  value: "{\r\n  \"accessToken\" : \"<ACCESS_TOKEN>\",\r\n  \"refreshToken\"\
                    \ : \"<REFRESH_TOKEN>\",\r\n  \"userId\" : \"<USER_ID>\",\r\n\
                    \  \"accessTokenExpiresAt\" : \"<ISO_TIMESTAMP>\",\r\n  \"refreshTokenExpiresAt\"\
                    \ : \"<ISO_TIMESTAMP>\"\r\n}"
        "410":
          description: "410"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                삭제된 사용자 로그인:
                  value: "{\r\n  \"code\" : \"USER_DELETED\",\r\n  \"message\" : \"\
                    이미 삭제된 계정입니다.\",\r\n  \"timestamp\" : \"2025-08-18T02:17:08.341896800Z\"\
                    \r\n}"
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                인증 대기중 사용자 로그인:
                  value: "{\r\n  \"code\" : \"USER_PENDING\",\r\n  \"message\" : \"\
                    인증 대기중인 계정입니다. 이메일 인증을 완료 후 다시 시도해주세요.\",\r\n  \"timestamp\" :\
                    \ \"2025-08-18T02:17:07.598319200Z\"\r\n}"
                차단된 사용자 로그인:
                  value: "{\r\n  \"code\" : \"USER_BANNED\",\r\n  \"message\" : \"\
                    차단된 계정입니다. 관리자에게 문의해주세요\",\r\n  \"timestamp\" : \"2025-08-18T02:17:07.795685400Z\"\
                    \r\n}"
                휴면 사용자 로그인:
                  value: "{\r\n  \"code\" : \"USER_DORMANT\",\r\n  \"message\" : \"\
                    휴면 계정입니다. 관리자에게 문의해주세요\",\r\n  \"timestamp\" : \"2025-08-18T02:17:07.893422300Z\"\
                    \r\n}"
        "401":
          description: "401"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                잘못된 비밀번호로 로그인:
                  value: "{\r\n  \"code\" : \"INVALID_CREDENTIALS\",\r\n  \"message\"\
                    \ : \"인증 정보가 올바르지 않습니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:08.453936900Z\"\
                    \r\n}"
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                존재하지 않는 사용자 로그인:
                  value: "{\r\n  \"code\" : \"USER_NOT_FOUND\",\r\n  \"message\" :\
                    \ \"사용자(nonexistent@example.com)를 찾을 수 없습니다\",\r\n  \"timestamp\"\
                    \ : \"2025-08-18T02:17:08.398984500Z\"\r\n}"
  /api/v1/users/me:
    get:
      tags:
      - User Profile
      summary: 내 프로필 조회
      description: |-
        현재 로그인한 사용자의 프로필 정보를 조회합니다.

        인증이 필요하며, JWT 토큰을 Bearer 형식으로 전달해야 합니다.
        토큰에서 추출한 사용자 ID를 기반으로 프로필 정보를 반환합니다.
      operationId: 내 프로필 조회 성공만료된 토큰으로 프로필 조회미인증 사용자 프로필 조회 실패삭제된 계정으로 프로필 조회잘못된 인증
        헤더 형식잘못된 토큰으로 프로필 조회정지된 계정 프로필 조회휴면 계정 프로필 조회
      parameters:
      - name: Authorization
        in: header
        description: "Bearer {JWT 액세스 토큰}"
        required: false
        schema:
          type: string
        example: Bearer <JWT_TOKEN>
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyProfileController.Response"
              examples:
                내 프로필 조회 성공:
                  value: "{\r\n  \"userId\" : \"1755483416431\",\r\n  \"email\" :\
                    \ \"active@example.com\",\r\n  \"nickname\" : \"activeuser\",\r\
                    \n  \"role\" : \"USER\",\r\n  \"status\" : \"ACTIVE\",\r\n  \"\
                    createdAt\" : \"2025-08-17T02:16:56.505661600Z\",\r\n  \"modifiedAt\"\
                    \ : \"2025-08-18T01:16:56.505661600Z\"\r\n}"
        "401":
          description: "401"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                만료된 토큰으로 프로필 조회:
                  value: "{\r\n  \"code\" : \"UNAUTHORIZED\",\r\n  \"message\" : \"\
                    Full authentication is required to access this resource\",\r\n\
                    \  \"timestamp\" : \"2025-08-18T02:17:04.295369Z\"\r\n}"
                잘못된 인증 헤더 형식:
                  value: "{\r\n  \"code\" : \"UNAUTHORIZED\",\r\n  \"message\" : \"\
                    Full authentication is required to access this resource\",\r\n\
                    \  \"timestamp\" : \"2025-08-18T02:17:01.862803900Z\"\r\n}"
                잘못된 토큰으로 프로필 조회:
                  value: "{\r\n  \"code\" : \"UNAUTHORIZED\",\r\n  \"message\" : \"\
                    Full authentication is required to access this resource\",\r\n\
                    \  \"timestamp\" : \"2025-08-18T02:17:06.523917700Z\"\r\n}"
        "403":
          description: "403"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                미인증 사용자 프로필 조회 실패:
                  value: "{\r\n  \"code\" : \"USER_PENDING\",\r\n  \"message\" : \"\
                    인증 대기중인 계정입니다. 이메일 인증을 완료 후 다시 시도해주세요.\",\r\n  \"timestamp\" :\
                    \ \"2025-08-18T02:17:00.103678600Z\"\r\n}"
                정지된 계정 프로필 조회:
                  value: "{\r\n  \"code\" : \"USER_BANNED\",\r\n  \"message\" : \"\
                    차단된 계정입니다. 관리자에게 문의해주세요\",\r\n  \"timestamp\" : \"2025-08-18T02:17:07.347008700Z\"\
                    \r\n}"
                휴면 계정 프로필 조회:
                  value: "{\r\n  \"code\" : \"USER_DORMANT\",\r\n  \"message\" : \"\
                    휴면 계정입니다. 관리자에게 문의해주세요\",\r\n  \"timestamp\" : \"2025-08-18T02:16:58.602629200Z\"\
                    \r\n}"
        "410":
          description: "410"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                삭제된 계정으로 프로필 조회:
                  value: "{\r\n  \"code\" : \"USER_DELETED\",\r\n  \"message\" : \"\
                    이미 삭제된 계정입니다.\",\r\n  \"timestamp\" : \"2025-08-18T02:17:00.903447900Z\"\
                    \r\n}"
  /api/v1/users/signup:
    post:
      tags:
      - User Management
      summary: 사용자 회원가입 - 공백 포함 닉네임
      description: 닉네임에 공백이 포함된 경우 400 Bad Request를 반환합니다.
      operationId: 공백 포함 닉네임으로 회원가입긴 닉네임으로 회원가입긴 비밀번호로 회원가입대문자 없는 비밀번호로 회원가입비밀번호 불일치로
        회원가입 실패빈 닉네임으로 회원가입빈 이메일로 회원가입소문자 없는 비밀번호로 회원가입잘못된 닉네임 형식으로 회원가입잘못된 이메일 형식으로
        회원가입중복 닉네임으로 회원가입중복 이메일로 회원가입짧은 닉네임으로 회원가입짧은 비밀번호로 회원가입특수문자 없는 비밀번호로 회원가입필수
        필드 누락으로 회원가입 실패회원가입 성공
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignUpController.Request"
            examples:
              공백 포함 닉네임으로 회원가입:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"테스터 공백\",\r\n  \"password\" : \"Test1234!\",\r\n  \"confirmPassword\"\
                  \ : \"Test1234!\"\r\n}"
              긴 닉네임으로 회원가입:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"가가가가가가가가가가가가가가가가가가가가가\",\r\n  \"password\" : \"Test1234!\"\
                  ,\r\n  \"confirmPassword\" : \"Test1234!\"\r\n}"
              긴 비밀번호로 회원가입:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"테스터\",\r\n  \"password\" : \"Test1234!aaaaaaaaaaaaaaaaaaaaaaaaa\"\
                  ,\r\n  \"confirmPassword\" : \"Test1234!aaaaaaaaaaaaaaaaaaaaaaaaa\"\
                  \r\n}"
              대문자 없는 비밀번호로 회원가입:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"테스터\",\r\n  \"password\" : \"test1234!\",\r\n  \"confirmPassword\"\
                  \ : \"test1234!\"\r\n}"
              비밀번호 불일치로 회원가입 실패:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"테스터\",\r\n  \"password\" : \"Test1234!\",\r\n  \"confirmPassword\"\
                  \ : \"DifferentPassword1!\"\r\n}"
              빈 닉네임으로 회원가입:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"   \",\r\n  \"password\" : \"Test1234!\",\r\n  \"confirmPassword\"\
                  \ : \"Test1234!\"\r\n}"
              빈 이메일로 회원가입:
                value: "{\r\n  \"email\" : \"   \",\r\n  \"nickname\" : \"테스터\",\r\
                  \n  \"password\" : \"Test1234!\",\r\n  \"confirmPassword\" : \"\
                  Test1234!\"\r\n}"
              소문자 없는 비밀번호로 회원가입:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"테스터\",\r\n  \"password\" : \"TEST1234!\",\r\n  \"confirmPassword\"\
                  \ : \"TEST1234!\"\r\n}"
              잘못된 닉네임 형식으로 회원가입:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"테스터@#$\",\r\n  \"password\" : \"Test1234!\",\r\n  \"confirmPassword\"\
                  \ : \"Test1234!\"\r\n}"
              잘못된 이메일 형식으로 회원가입:
                value: "{\r\n  \"email\" : \"invalid-email\",\r\n  \"nickname\" :\
                  \ \"테스터\",\r\n  \"password\" : \"Test1234!\",\r\n  \"confirmPassword\"\
                  \ : \"Test1234!\"\r\n}"
              중복 닉네임으로 회원가입:
                value: "{\r\n  \"email\" : \"second@example.com\",\r\n  \"nickname\"\
                  \ : \"existingUser123\",\r\n  \"password\" : \"Test1234!\",\r\n\
                  \  \"confirmPassword\" : \"Test1234!\"\r\n}"
              중복 이메일로 회원가입:
                value: "{\r\n  \"email\" : \"existing@example.com\",\r\n  \"nickname\"\
                  \ : \"테스터\",\r\n  \"password\" : \"Test1234!\",\r\n  \"confirmPassword\"\
                  \ : \"Test1234!\"\r\n}"
              짧은 닉네임으로 회원가입:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"a\",\r\n  \"password\" : \"Test1234!\",\r\n  \"confirmPassword\"\
                  \ : \"Test1234!\"\r\n}"
              짧은 비밀번호로 회원가입:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"테스터\",\r\n  \"password\" : \"Test1!\",\r\n  \"confirmPassword\"\
                  \ : \"Test1!\"\r\n}"
              특수문자 없는 비밀번호로 회원가입:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"테스터\",\r\n  \"password\" : \"Test12345\",\r\n  \"confirmPassword\"\
                  \ : \"Test12345\"\r\n}"
              필수 필드 누락으로 회원가입 실패:
                value: "{\r\n  \"nickname\" : \"테스터\",\r\n  \"password\" : \"Test1234!\"\
                  ,\r\n  \"confirmPassword\" : \"Test1234!\"\r\n}"
              회원가입 성공:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"nickname\"\
                  \ : \"테스터\",\r\n  \"password\" : \"Test1234!\",\r\n  \"confirmPassword\"\
                  \ : \"Test1234!\"\r\n}"
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                공백 포함 닉네임으로 회원가입:
                  value: "{\r\n  \"code\" : \"NICKNAME_CONTAINS_SPACE\",\r\n  \"message\"\
                    \ : \"닉네임에는 공백을 포함할 수 없습니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:16.497058600Z\"\
                    \r\n}"
                긴 닉네임으로 회원가입:
                  value: "{\r\n  \"code\" : \"NICKNAME_TOO_LONG\",\r\n  \"message\"\
                    \ : \"닉네임은 최대 20자 이하여야 합니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:15.724436300Z\"\
                    \r\n}"
                긴 비밀번호로 회원가입:
                  value: "{\r\n  \"code\" : \"PASSWORD_TOO_LONG\",\r\n  \"message\"\
                    \ : \"비밀번호는 최대 30자 이하여야 합니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:14.947081900Z\"\
                    \r\n}"
                대문자 없는 비밀번호로 회원가입:
                  value: "{\r\n  \"code\" : \"PASSWORD_NO_UPPERCASE\",\r\n  \"message\"\
                    \ : \"비밀번호는 대문자를 포함해야 합니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:15.088211300Z\"\
                    \r\n}"
                비밀번호 불일치로 회원가입 실패:
                  value: "{\r\n  \"code\" : \"PASSWORD_MISMATCH\",\r\n  \"message\"\
                    \ : \"비밀번호가 일치하지 않습니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:14.863334500Z\"\
                    \r\n}"
                빈 닉네임으로 회원가입:
                  value: "{\r\n  \"code\" : \"BLANK_NICKNAME\",\r\n  \"message\" :\
                    \ \"닉네임은 필수 입력 항목입니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:15.806840100Z\"\
                    \r\n}"
                빈 이메일로 회원가입:
                  value: "{\r\n  \"code\" : \"BLANK_EMAIL\",\r\n  \"message\" : \"\
                    이메일은 필수 입력 항목입니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:15.014736500Z\"\
                    \r\n}"
                소문자 없는 비밀번호로 회원가입:
                  value: "{\r\n  \"code\" : \"PASSWORD_NO_LOWERCASE\",\r\n  \"message\"\
                    \ : \"비밀번호는 소문자를 포함해야 합니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:15.185604400Z\"\
                    \r\n}"
                잘못된 닉네임 형식으로 회원가입:
                  value: "{\r\n  \"code\" : \"NICKNAME_CONTAINS_SPECIAL_CHAR\",\r\n\
                    \  \"message\" : \"닉네임은 한글, 영문, 숫자, 언더스코어(_), 하이픈(-)만 사용할 수 있습\
                    니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:13.999823800Z\"\r\
                    \n}"
                잘못된 이메일 형식으로 회원가입:
                  value: "{\r\n  \"code\" : \"INVALID_EMAIL_FORMAT\",\r\n  \"message\"\
                    \ : \"올바른 이메일 형식이 아닙니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:17.330011200Z\"\
                    \r\n}"
                짧은 닉네임으로 회원가입:
                  value: "{\r\n  \"code\" : \"NICKNAME_TOO_SHORT\",\r\n  \"message\"\
                    \ : \"닉네임은 최소 2자 이상이어야 합니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:17.764047200Z\"\
                    \r\n}"
                짧은 비밀번호로 회원가입:
                  value: "{\r\n  \"code\" : \"PASSWORD_TOO_SHORT\",\r\n  \"message\"\
                    \ : \"비밀번호는 최소 8자 이상이어야 합니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:16.586458300Z\"\
                    \r\n}"
                특수문자 없는 비밀번호로 회원가입:
                  value: "{\r\n  \"code\" : \"PASSWORD_NO_SPECIAL_CHAR\",\r\n  \"\
                    message\" : \"비밀번호는 특수문자를 포함해야 합니다\",\r\n  \"timestamp\" : \"\
                    2025-08-18T02:17:14.322582900Z\"\r\n}"
                필수 필드 누락으로 회원가입 실패:
                  value: "{\r\n  \"code\" : \"MISSING_REQUIRED_FIELD\",\r\n  \"message\"\
                    \ : \"필수 필드 'email'이(가) 누락되었습니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:16.173843600Z\"\
                    \r\n}"
        "409":
          description: "409"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                중복 닉네임으로 회원가입:
                  value: "{\r\n  \"code\" : \"DUPLICATE_NICKNAME\",\r\n  \"message\"\
                    \ : \"이미 사용중인 닉네임(existingUser123)입니다\",\r\n  \"timestamp\" :\
                    \ \"2025-08-18T02:17:17.666689Z\"\r\n}"
                중복 이메일로 회원가입:
                  value: "{\r\n  \"code\" : \"DUPLICATE_EMAIL\",\r\n  \"message\"\
                    \ : \"이미 사용중인 이메일(existing@example.com)입니다\",\r\n  \"timestamp\"\
                    \ : \"2025-08-18T02:17:14.552533200Z\"\r\n}"
        "200":
          description: "200"
  /api/v1/users/verify:
    post:
      tags:
      - User Management
      summary: 이메일 인증 - 만료된 인증 코드
      description: 인증 코드가 만료된 경우 400 Bad Request를 반환합니다.
      operationId: 만료된 인증 코드로 인증이메일 인증 성공이미 인증된 사용자 재인증잘못된 길이의 인증 코드잘못된 이메일로 인증잘못된
        인증 코드로 인증존재하지 않는 사용자 인증필수 필드 누락으로 인증 실패
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserVerifyController.Request"
            examples:
              만료된 인증 코드로 인증:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"registrationCode\"\
                  \ : \"123456\"\r\n}"
              이메일 인증 성공:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"registrationCode\"\
                  \ : \"123456\"\r\n}"
              이미 인증된 사용자 재인증:
                value: "{\r\n  \"email\" : \"active@example.com\",\r\n  \"registrationCode\"\
                  \ : \"123456\"\r\n}"
              잘못된 길이의 인증 코드:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"registrationCode\"\
                  \ : \"12345\"\r\n}"
              잘못된 이메일로 인증:
                value: "{\r\n  \"email\" : \"invalid-email\",\r\n  \"registrationCode\"\
                  \ : \"123456\"\r\n}"
              잘못된 인증 코드로 인증:
                value: "{\r\n  \"email\" : \"test@example.com\",\r\n  \"registrationCode\"\
                  \ : \"999999\"\r\n}"
              존재하지 않는 사용자 인증:
                value: "{\r\n  \"email\" : \"nonexistent@example.com\",\r\n  \"registrationCode\"\
                  \ : \"123456\"\r\n}"
              필수 필드 누락으로 인증 실패:
                value: "{\r\n  \"email\" : \"test@example.com\"\r\n}"
      responses:
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                만료된 인증 코드로 인증:
                  value: "{\r\n  \"code\" : \"REGISTRATION_EXPIRED\",\r\n  \"message\"\
                    \ : \"회원 가입 요청이 만료되었습니다. 인증 코드 다시 발송 후 재인증 해주세요.\",\r\n  \"timestamp\"\
                    \ : \"2025-08-18T02:17:20.132424200Z\"\r\n}"
                이미 인증된 사용자 재인증:
                  value: "{\r\n  \"code\" : \"NOT_FOUND_PENDING_USER\",\r\n  \"message\"\
                    \ : \"인증 대기중인 사용자(active@example.com)를 찾을 수 없습니다\",\r\n  \"timestamp\"\
                    \ : \"2025-08-18T02:17:18.501761500Z\"\r\n}"
                존재하지 않는 사용자 인증:
                  value: "{\r\n  \"code\" : \"USER_NOT_FOUND\",\r\n  \"message\" :\
                    \ \"사용자(nonexistent@example.com)를 찾을 수 없습니다\",\r\n  \"timestamp\"\
                    \ : \"2025-08-18T02:17:21.188195Z\"\r\n}"
        "201":
          description: "201"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                잘못된 길이의 인증 코드:
                  value: "{\r\n  \"code\" : \"INVALID_ARGUMENT\",\r\n  \"message\"\
                    \ : \"인증 코드는 정확히 6자리여야 합니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:20.822069300Z\"\
                    \r\n}"
                잘못된 이메일로 인증:
                  value: "{\r\n  \"code\" : \"INVALID_EMAIL_FORMAT\",\r\n  \"message\"\
                    \ : \"올바른 이메일 형식이 아닙니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:21.074445500Z\"\
                    \r\n}"
                잘못된 인증 코드로 인증:
                  value: "{\r\n  \"code\" : \"CODE_MISMATCH\",\r\n  \"message\" :\
                    \ \"인증 코드가 일치하지 않습니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:20.477697300Z\"\
                    \r\n}"
                필수 필드 누락으로 인증 실패:
                  value: "{\r\n  \"code\" : \"MISSING_REQUIRED_FIELD\",\r\n  \"message\"\
                    \ : \"필수 필드 'registrationCode'이(가) 누락되었습니다\",\r\n  \"timestamp\"\
                    \ : \"2025-08-18T02:17:21.122928400Z\"\r\n}"
  /api/v1/users/{userId}:
    get:
      tags:
      - User Profile
      summary: 특정 사용자 프로필 조회 - 관리자 권한
      description: |-
        관리자는 모든 사용자의 프로필을 조회할 수 있습니다.
        ADMIN 권한이 필요합니다.
      operationId: 관리자 프로필 조회사용자 프로필 조회 성공삭제된 사용자 프로필 조회인증 없이 프로필 조회잘못된 사용자ID로 프로필
        조회존재하지 않는 사용자 프로필 조회타인 프로필 조회휴면 사용자 프로필 조회
      parameters:
      - name: userId
        in: path
        description: 조회할 사용자의 ID
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "Bearer {JWT 토큰} (ADMIN 권한 필요)"
        required: true
        schema:
          type: string
        example: Bearer <JWT_TOKEN>
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileController.Response"
              examples:
                관리자 프로필 조회:
                  value: "{\r\n  \"userId\" : \"1755483431890\",\r\n  \"email\" :\
                    \ \"other@example.com\",\r\n  \"nickname\" : \"otheruser\",\r\n\
                    \  \"role\" : \"USER\",\r\n  \"status\" : \"ACTIVE\",\r\n  \"\
                    createdAt\" : \"2025-08-18T02:17:11.967553700Z\",\r\n  \"modifiedAt\"\
                    \ : \"2025-08-18T02:17:11.967553700Z\"\r\n}"
                사용자 프로필 조회 성공:
                  value: "{\r\n  \"userId\" : \"1755483428537\",\r\n  \"email\" :\
                    \ \"test@example.com\",\r\n  \"nickname\" : \"testuser\",\r\n\
                    \  \"role\" : \"USER\",\r\n  \"status\" : \"ACTIVE\",\r\n  \"\
                    createdAt\" : \"2025-08-18T02:17:08.615576900Z\",\r\n  \"modifiedAt\"\
                    \ : \"2025-08-18T02:17:08.615576900Z\"\r\n}"
                타인 프로필 조회:
                  value: "{\r\n  \"userId\" : \"1755483433130\",\r\n  \"email\" :\
                    \ \"other@example.com\",\r\n  \"nickname\" : \"otheruser\",\r\n\
                    \  \"role\" : \"USER\",\r\n  \"status\" : \"ACTIVE\",\r\n  \"\
                    createdAt\" : \"2025-08-18T02:17:13.212082100Z\",\r\n  \"modifiedAt\"\
                    \ : \"2025-08-18T02:17:13.212082100Z\"\r\n}"
        "410":
          description: "410"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                삭제된 사용자 프로필 조회:
                  value: "{\r\n  \"code\" : \"USER_DELETED\",\r\n  \"message\" : \"\
                    이미 삭제된 계정입니다.\",\r\n  \"timestamp\" : \"2025-08-18T02:17:12.469475100Z\"\
                    \r\n}"
        "401":
          description: "401"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                인증 없이 프로필 조회:
                  value: "{\r\n  \"code\" : \"UNAUTHORIZED\",\r\n  \"message\" : \"\
                    Full authentication is required to access this resource\",\r\n\
                    \  \"timestamp\" : \"2025-08-18T02:17:10.647249200Z\"\r\n}"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                잘못된 사용자ID로 프로필 조회:
                  value: "{\r\n  \"code\" : \"INVALID_USER_ID_FORMAT\",\r\n  \"message\"\
                    \ : \"유효하지 않은 사용자 ID 형식입니다: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\
                    ,\r\n  \"timestamp\" : \"2025-08-18T02:17:11.286905300Z\"\r\n}"
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                존재하지 않는 사용자 프로필 조회:
                  value: "{\r\n  \"code\" : \"USER_NOT_FOUND\",\r\n  \"message\" :\
                    \ \"사용자(999999)를 찾을 수 없습니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:11.596098500Z\"\
                    \r\n}"
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                휴면 사용자 프로필 조회:
                  value: "{\r\n  \"code\" : \"USER_DORMANT\",\r\n  \"message\" : \"\
                    휴면 계정입니다. 관리자에게 문의해주세요\",\r\n  \"timestamp\" : \"2025-08-18T02:17:09.457562300Z\"\
                    \r\n}"
  /api/v1/users/verify/resend:
    post:
      tags:
      - User Management
      summary: 이메일 인증 코드 재발송 - 이미 인증됨
      description: 이미 인증된 사용자가 재발송을 요청하는 경우 404 Not Found를 반환합니다.
      operationId: 이미 인증된 사용자 재발송인증 코드 재발송 성공잘못된 이메일로 재발송존재하지 않는 사용자 재발송필수 필드 누락으로
        재발송 실패
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserVerifyResendController.Request"
            examples:
              이미 인증된 사용자 재발송:
                value: "{\r\n  \"email\" : \"active@example.com\"\r\n}"
              인증 코드 재발송 성공:
                value: "{\r\n  \"email\" : \"test@example.com\"\r\n}"
              잘못된 이메일로 재발송:
                value: "{\r\n  \"email\" : \"invalid-email\"\r\n}"
              존재하지 않는 사용자 재발송:
                value: "{\r\n  \"email\" : \"nonexistent@example.com\"\r\n}"
              필수 필드 누락으로 재발송 실패:
                value: "{ }"
      responses:
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                이미 인증된 사용자 재발송:
                  value: "{\r\n  \"code\" : \"NOT_FOUND_PENDING_USER\",\r\n  \"message\"\
                    \ : \"인증 대기중인 사용자(active@example.com)를 찾을 수 없습니다\",\r\n  \"timestamp\"\
                    \ : \"2025-08-18T02:17:23.152558600Z\"\r\n}"
                존재하지 않는 사용자 재발송:
                  value: "{\r\n  \"code\" : \"USER_NOT_FOUND\",\r\n  \"message\" :\
                    \ \"사용자(nonexistent@example.com)를 찾을 수 없습니다\",\r\n  \"timestamp\"\
                    \ : \"2025-08-18T02:17:21.795204800Z\"\r\n}"
        "200":
          description: "200"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                잘못된 이메일로 재발송:
                  value: "{\r\n  \"code\" : \"INVALID_EMAIL_FORMAT\",\r\n  \"message\"\
                    \ : \"올바른 이메일 형식이 아닙니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:22.351823200Z\"\
                    \r\n}"
                필수 필드 누락으로 재발송 실패:
                  value: "{\r\n  \"code\" : \"MISSING_REQUIRED_FIELD\",\r\n  \"message\"\
                    \ : \"필수 필드 'email'이(가) 누락되었습니다\",\r\n  \"timestamp\" : \"2025-08-18T02:17:23.440622500Z\"\
                    \r\n}"
components:
  schemas:
    UserLoginController.Request:
      title: UserLoginController.Request
      required:
      - email
      - password
      type: object
      properties:
        password:
          type: string
          description: 사용자 비밀번호
        email:
          type: string
          description: 사용자 이메일 주소
    UserLoginController.Response:
      title: UserLoginController.Response
      required:
      - accessToken
      - accessTokenExpiresAt
      - refreshToken
      - refreshTokenExpiresAt
      - userId
      type: object
      properties:
        refreshTokenExpiresAt:
          type: string
          description: 리프레시 토큰 만료 시간 (ISO-8601 형식)
        accessTokenExpiresAt:
          type: string
          description: 액세스 토큰 만료 시간 (ISO-8601 형식)
        accessToken:
          type: string
          description: 액세스 토큰
        userId:
          type: string
          description: 사용자 고유 식별자
        refreshToken:
          type: string
          description: 리프레시 토큰
    UserSignUpController.Request:
      title: UserSignUpController.Request
      required:
      - confirmPassword
      - email
      - nickname
      - password
      type: object
      properties:
        password:
          type: string
          description: "비밀번호 (8-20자, 대소문자, 특수문자 포함)"
        nickname:
          type: string
          description: 사용자 닉네임 (2-20자)
        confirmPassword:
          type: string
          description: 비밀번호 확인
        email:
          type: string
          description: 사용자 이메일 주소
    UserVerifyResendController.Request:
      title: UserVerifyResendController.Request
      required:
      - email
      type: object
      properties:
        email:
          type: string
          description: 인증 코드를 재발송할 이메일 주소
    MyProfileController.Response:
      title: MyProfileController.Response
      required:
      - createdAt
      - email
      - modifiedAt
      - nickname
      - role
      - status
      - userId
      type: object
      properties:
        createdAt:
          type: string
          description: 계정 생성 시간 (ISO-8601 형식)
        role:
          type: string
          description: "사용자 권한 (USER, ADMIN)"
        modifiedAt:
          type: string
          description: 계정 최종 수정 시간 (ISO-8601 형식)
        nickname:
          type: string
          description: 사용자 닉네임
        userId:
          type: string
          description: 사용자 고유 ID (Snowflake ID)
        email:
          type: string
          description: 사용자 이메일 주소
        status:
          type: string
          description: "계정 상태 (ACTIVE, PENDING, DORMANT, BANNED, DELETED)"
    UserVerifyController.Request:
      title: UserVerifyController.Request
      required:
      - email
      - registrationCode
      type: object
      properties:
        registrationCode:
          type: string
          description: 6자리 인증 코드
        email:
          type: string
          description: 인증할 이메일 주소
    UserProfileController.Response:
      title: UserProfileController.Response
      required:
      - createdAt
      - email
      - modifiedAt
      - nickname
      - role
      - status
      - userId
      type: object
      properties:
        createdAt:
          type: string
          description: 계정 생성 시간 (ISO-8601)
        role:
          type: string
          description: "사용자 권한 (USER, ADMIN)"
        modifiedAt:
          type: string
          description: 계정 수정 시간 (ISO-8601)
        nickname:
          type: string
          description: 사용자 닉네임
        userId:
          type: string
          description: 사용자 ID
        email:
          type: string
          description: 사용자 이메일
        status:
          type: string
          description: "사용자 상태 (ACTIVE, PENDING, DORMANT, BANNED, DELETED)"
    ErrorResponse:
      title: ErrorResponse
      required:
      - code
      - message
      - timestamp
      type: object
      properties:
        code:
          type: string
          description: 에러 코드
        message:
          type: string
          description: 에러 메시지
        timestamp:
          type: string
          description: 에러 발생 시간 (ISO-8601 형식)
